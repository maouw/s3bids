[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "s3bids"
dynamic = ["version"]
description = "Useful classes for downloading BIDS datasets from S3."
readme = "README.md"
requires-python = ">=3.10"
license = { text = "BSD3" }
keywords = ["BIDS", "S3", "AWS", "neuroimaging"]
authors = [{ name = "NRDG" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = [
    "boto3==1.34.51",
    "botocore==1.34.51",
    "s3fs~=2024.3.1",
#    "dask~=2024.3.1",
#    "numpy~=1.26.4",
    "tqdm~=4.66.2",
    "nibabel~=5.2.1",
    "pybids~=0.16.4",
#    "pandas~=2.2.1",
]


[project.optional-dependencies]
dev = [
    "coverage[toml]>=6.5",
    "pytest~=8.1.1",
    "boto3-stubs==1.34.51",
    "boto3-stubs[s3]==1.34.51",
    "mypy>=1.0.0",
    "ruff~=0.3.4,<1",
]


[project.urls]
Homepage = "https://github.com/nrdg/s3bids"
Documentation = "https://nrdg.github.io/s3bids"
Issues = "https://github.com/nrdg/s3bids/issues"
Source = "https://github.com/nrdg/s3bids"

[tool.hatch.version]
source = "vcs"

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
check = "mypy --install-types --non-interactive {args:src/s3bids tests}"
cov-report = ["- coverage combine", "coverage report"]
cov = ["test-cov", "cov-report"]

[[tool.hatch.envs.all.matrix]]
python = ["3.12", "3.11", "3.10"]

[tool.coverage.run]
source_pkgs = ["s3bids", "tests"]
branch = true
parallel = true
omit = ["src/s3bids/_version.py"]

[tool.coverage.paths]
s3bids = ["src/s3bids", "*/s3bids/src/s3bids"]
tests = ["tests", "*/s3bids/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.hatch.build.hooks.vcs]
version-file = "src/s3bids/_version.py"

[tool.hatch.build.targets.sdist]
exclude = [".git_archival.txt"]

[tool.hatch.build.targets.wheel]
packages = ["s3bids"]

[tool.hatch.build]
packages = ["s3bids"]

[tool.ruff]
src = ["src", "tests"]
line-length = 120 # default for hatch
target-version = "py310"
show-fixes = true
output-format = "full"

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 80

[tool.ruff.lint]
select = [
    "A",
    "ARG",
    "ASYNC",
    "B",
    "BLE",
    "C",
    "COM",
    "DTZ",
    "E",
    "EM",
    "EXE",
    "F",
    "FA",
    "FBT",
    "FLY",
#    "FURB",
    "G",
    "I",
    "ICN",
    "INP",
    "INT",
    "ISC",
    "LOG",
    "N",
    "PERF",
    "PGH",
    "PIE",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "PT",
    "PYI",
    "RET",
    "RSE",
    "RUF",
    "S",
    "SIM",
    "SLF",
    "SLOT",
    "T",
    "TCH",
    "TD",
    "TID",
    "TRIO",
    "TRY",
    "UP",
    "W",
    "YTT",
]
ignore = [
    "COM812",
    "ISC001"
]

[tool.ruff.lint.per-file-ignores]
"**/scripts/*" = ["INP001", "T201"]
"**/tests/**/*" = ["PLC1901", "PLR2004", "PLR6301", "S", "TID252"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.isort]
known-first-party = ["hatch"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false
